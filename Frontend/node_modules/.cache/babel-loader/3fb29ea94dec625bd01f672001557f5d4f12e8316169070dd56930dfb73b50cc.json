{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ki\\xE9ran\\\\Desktop\\\\garage-studi\\\\src\\\\pages\\\\DashboardAdmin.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Navigation from '../components/Navigation';\nimport { useEffect, useState } from 'react';\nimport ReactModal from 'react-modal';\nimport serviceDefault from '../components/image/garage-service-default.jpg';\nimport BoutonAjoutServices from '../components/BoutonAjoutServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardAdmin = () => {\n  _s();\n  const [services, setServices] = useState([]);\n  const [newServices, setNewServices] = useState(getDefaultService());\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  useEffect(() => {\n    ReactModal.setAppElement('body');\n  }, []);\n  useEffect(() => {\n    // Récupérer les données du localstorage\n    const getListeServices = JSON.parse(localStorage.getItem('liste de services')) || [];\n    //mettre les données dans la variable services\n    setServices(getListeServices);\n  }, []);\n  function getNextServiceId() {\n    const getListeServices = JSON.parse(localStorage.getItem('liste de services')) || [];\n    const lastService = getListeServices[getListeServices.length - 1];\n    return lastService ? lastService.id + 1 : 1;\n  }\n  function getDefaultService() {\n    return {\n      id: getNextServiceId(),\n      name: \"service test\",\n      content: \"lorem ipsum\",\n      image: serviceDefault\n    };\n  }\n  ;\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const newValue = value;\n    setNewServices({\n      ...newServices,\n      [name]: newValue\n    });\n  };\n  const handleAddService = () => {\n    // les services mises à jour\n    const updateServices = [...services, newServices];\n    // Mettre à jour les services dans le localstorage\n    localStorage.setItem('liste de services', JSON.stringify(updateServices));\n    //mettre les données  à jour dans une autre variable\n    const updateListeServices = localStorage.getItem('liste de services');\n    //puis repasser ces donnée dans le localStorage avec une autre clé\n    localStorage.setItem('liste de services update', updateListeServices);\n    //mettre à jour l'affichage\n    setServices(updateServices);\n    //reprendre la valeur par défaut\n    setNewServices(getDefaultService());\n    //fermer la fenêtre modal\n    setIsModalOpen(false);\n  };\n  const handleImageChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      const img = e.target.files[0];\n      setNewServices({\n        ...newServices,\n        image: URL.createObjectURL(img)\n      });\n    }\n  };\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LE DASHBOARD ADMIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BoutonAjoutServices, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardAdmin, \"uXUxcYNG7IiUklcxDcSj84Zwpzg=\");\n_c = DashboardAdmin;\nexport default DashboardAdmin;\nvar _c;\n$RefreshReg$(_c, \"DashboardAdmin\");","map":{"version":3,"names":["React","Navigation","useEffect","useState","ReactModal","serviceDefault","BoutonAjoutServices","jsxDEV","_jsxDEV","DashboardAdmin","_s","services","setServices","newServices","setNewServices","getDefaultService","isModalOpen","setIsModalOpen","setAppElement","getListeServices","JSON","parse","localStorage","getItem","getNextServiceId","lastService","length","id","name","content","image","handleInputChange","e","value","target","newValue","handleAddService","updateServices","setItem","stringify","updateListeServices","handleImageChange","files","img","URL","createObjectURL","openModal","closeModal","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Kiéran/Desktop/garage-studi/src/pages/DashboardAdmin.js"],"sourcesContent":["import React from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport { useEffect, useState } from 'react';\r\nimport ReactModal from 'react-modal';\r\nimport serviceDefault from '../components/image/garage-service-default.jpg'\r\nimport BoutonAjoutServices from '../components/BoutonAjoutServices';\r\n\r\nconst DashboardAdmin = () => {\r\n\r\n    const [services, setServices] = useState([]);\r\n    const [newServices, setNewServices] = useState(getDefaultService());\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        ReactModal.setAppElement('body');\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        // Récupérer les données du localstorage\r\n        const getListeServices = JSON.parse(localStorage.getItem('liste de services')) || [];\r\n        //mettre les données dans la variable services\r\n        setServices(getListeServices);\r\n    }, []);\r\n\r\n    function getNextServiceId() {\r\n        const getListeServices = JSON.parse(localStorage.getItem('liste de services')) || [];\r\n        const lastService = getListeServices[getListeServices.length - 1];\r\n        return lastService ? lastService.id + 1 : 1;\r\n    }\r\n\r\n    function getDefaultService() {\r\n        return {\r\n            id: getNextServiceId(),\r\n            name: \"service test\",\r\n            content: \"lorem ipsum\",\r\n            image: serviceDefault,\r\n        };\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        const newValue = value;\r\n\r\n        setNewServices({\r\n            ...newServices,\r\n            [name]: newValue,\r\n        });\r\n    };\r\n\r\n    const handleAddService = () => {\r\n        // les services mises à jour\r\n        const updateServices = [...services, newServices];\r\n        // Mettre à jour les services dans le localstorage\r\n        localStorage.setItem('liste de services', JSON.stringify(updateServices));\r\n        //mettre les données  à jour dans une autre variable\r\n        const updateListeServices = localStorage.getItem('liste de services');\r\n        //puis repasser ces donnée dans le localStorage avec une autre clé\r\n        localStorage.setItem('liste de services update', updateListeServices);\r\n        //mettre à jour l'affichage\r\n        setServices(updateServices);\r\n        //reprendre la valeur par défaut\r\n        setNewServices(getDefaultService());\r\n        //fermer la fenêtre modal\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    const handleImageChange = (e) => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            const img = e.target.files[0];\r\n            setNewServices({\r\n                ...newServices,\r\n                image: URL.createObjectURL(img)\r\n            })\r\n        }\r\n    }\r\n\r\n    const openModal = () => {\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Navigation />\r\n            <h1>LE DASHBOARD ADMIN</h1>\r\n            <BoutonAjoutServices />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardAdmin;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}