{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ki\\xE9ran\\\\Desktop\\\\garage-studi\\\\src\\\\components\\\\BoutonAjoutServices.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport ReactModal from 'react-modal';\nimport serviceDefault from '../image/garage-service-default.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoutonAjoutServices = () => {\n  _s();\n  const [services, setServices] = useState([]);\n  const [newServices, setNewServices] = useState(getDefaultService());\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  useEffect(() => {\n    ReactModal.setAppElement('body');\n  }, []);\n  useEffect(() => {\n    // Récupérer les données update du localStorage\n    const getListeServicesUpdate = JSON.parse(localStorage.getItem('liste de services')) || [];\n    //mettre les données dans la variable services\n    setServices(getListeServicesUpdate);\n  }, []);\n  function getDefaultService() {\n    return {\n      name: \"service test\",\n      content: \"lorem ipsum\",\n      image: serviceDefault\n    };\n  }\n  ;\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const newValue = value;\n    setNewServices({\n      ...newServices,\n      [name]: newValue\n    });\n  };\n  const handleAddService = () => {\n    const getListeServicesUpdate = JSON.parse(localStorage.getItem('liste de services')) || [];\n    // les services mises à jour\n    const updateServices = [...getListeServicesUpdate, newServices];\n    // Mettre à jour les services dans le localstorage\n    localStorage.setItem('liste de services', JSON.stringify(updateServices));\n\n    //mettre les données  à jour dans une autre variable\n    /*const updateListeServices = localStorage.getItem('liste de services');*/\n    //puis repasser ces donnée dans le localStorage avec une autre clé\n    /*localStorage.setItem('liste de services update', updateListeServices);*/\n\n    //mettre à jour l'affichage\n    setServices(updateServices);\n    //reprendre la valeur par défaut\n    setNewServices(getDefaultService());\n    //fermer la fenêtre modal\n    setIsModalOpen(false);\n  };\n  const handleImageChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      const img = e.target.files[0];\n      setNewServices({\n        ...newServices,\n        image: URL.createObjectURL(img)\n      });\n    }\n  };\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttonAjouterService\",\n      onClick: openModal,\n      children: \"Ajouter un service\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactModal, {\n      isOpen: isModalOpen,\n      onRequestClose: closeModal,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"ajoutService\",\n        onSubmit: handleAddService,\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Ajouter un service\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          id: \"name\",\n          className: \"intituleService\",\n          placeholder: \"L'intitul\\xE9 du service\",\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"intituleService\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"content\",\n          id: \"content\",\n          cols: \"100\",\n          rows: \"5\",\n          placeholder: \"Explication du service\",\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"explicationService\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"uploadImage\",\n          id: \"uploadImage\",\n          onChange: handleImageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"uploadImage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttonAjoutService\",\n            type: \"submit\",\n            children: \"Ajouter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttonAnnulerService\",\n            onClick: closeModal,\n            children: \"Fermer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(BoutonAjoutServices, \"uXUxcYNG7IiUklcxDcSj84Zwpzg=\");\n_c = BoutonAjoutServices;\nexport default BoutonAjoutServices;\nvar _c;\n$RefreshReg$(_c, \"BoutonAjoutServices\");","map":{"version":3,"names":["React","useEffect","useState","ReactModal","serviceDefault","jsxDEV","_jsxDEV","BoutonAjoutServices","_s","services","setServices","newServices","setNewServices","getDefaultService","isModalOpen","setIsModalOpen","setAppElement","getListeServicesUpdate","JSON","parse","localStorage","getItem","name","content","image","handleInputChange","e","value","target","newValue","handleAddService","updateServices","setItem","stringify","handleImageChange","files","img","URL","createObjectURL","openModal","closeModal","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onRequestClose","onSubmit","type","id","placeholder","onChange","required","htmlFor","cols","rows","_c","$RefreshReg$"],"sources":["C:/Users/Kiéran/Desktop/garage-studi/src/components/BoutonAjoutServices.js"],"sourcesContent":["import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport ReactModal from 'react-modal';\r\nimport serviceDefault from '../image/garage-service-default.jpg'\r\n\r\nconst BoutonAjoutServices = () => {\r\n\r\n    const [services, setServices] = useState([]);\r\n    const [newServices, setNewServices] = useState(getDefaultService());\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        ReactModal.setAppElement('body');\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Récupérer les données update du localStorage\r\n        const getListeServicesUpdate = JSON.parse(localStorage.getItem('liste de services')) || [];\r\n        //mettre les données dans la variable services\r\n        setServices(getListeServicesUpdate);\r\n    }, []);\r\n\r\n    function getDefaultService() {\r\n        return {\r\n            name: \"service test\",\r\n            content: \"lorem ipsum\",\r\n            image: serviceDefault,\r\n        };\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        const newValue = value;\r\n\r\n        setNewServices({\r\n            ...newServices,\r\n            [name]: newValue,\r\n        });\r\n    };\r\n\r\n    const handleAddService = () => {\r\n        const getListeServicesUpdate = JSON.parse(localStorage.getItem('liste de services')) || []\r\n        // les services mises à jour\r\n        const updateServices = [...getListeServicesUpdate, newServices];\r\n        // Mettre à jour les services dans le localstorage\r\n        localStorage.setItem('liste de services', JSON.stringify(updateServices));\r\n\r\n\r\n        //mettre les données  à jour dans une autre variable\r\n        /*const updateListeServices = localStorage.getItem('liste de services');*/\r\n        //puis repasser ces donnée dans le localStorage avec une autre clé\r\n        /*localStorage.setItem('liste de services update', updateListeServices);*/\r\n\r\n\r\n\r\n        //mettre à jour l'affichage\r\n        setServices(updateServices);\r\n        //reprendre la valeur par défaut\r\n        setNewServices(getDefaultService());\r\n        //fermer la fenêtre modal\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    const handleImageChange = (e) => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            const img = e.target.files[0];\r\n            setNewServices({\r\n                ...newServices,\r\n                image: URL.createObjectURL(img)\r\n            })\r\n        }\r\n    }\r\n\r\n    const openModal = () => {\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button className=\"buttonAjouterService\" onClick={openModal}>Ajouter un service</button>\r\n            <ReactModal\r\n                isOpen={isModalOpen}\r\n                onRequestClose={closeModal}\r\n            >\r\n                <form className=\"ajoutService\" onSubmit={handleAddService}>\r\n                    <legend>Ajouter un service</legend>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        className=\"intituleService\"\r\n                        placeholder=\"L'intitulé du service\"\r\n                        onChange={handleInputChange}\r\n                        required\r\n                    />\r\n                    <label htmlFor=\"intituleService\"></label>\r\n\r\n                    <textarea\r\n                        name=\"content\"\r\n                        id=\"content\"\r\n                        cols=\"100\"\r\n                        rows=\"5\"\r\n                        placeholder=\"Explication du service\"\r\n                        onChange={handleInputChange}\r\n                        required\r\n                    />\r\n                    <label htmlFor=\"explicationService\"></label>\r\n\r\n                    <input\r\n                        type=\"file\"\r\n                        name=\"uploadImage\"\r\n                        id=\"uploadImage\"\r\n                        onChange={handleImageChange}\r\n                    />\r\n                    <label htmlFor=\"uploadImage\"></label>\r\n                    <div>\r\n                        <button className=\"buttonAjoutService\" type=\"submit\">Ajouter</button>\r\n                        <button className=\"buttonAnnulerService\" onClick={closeModal}>Fermer</button>\r\n                    </div>\r\n                </form>\r\n            </ReactModal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BoutonAjoutServices;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}