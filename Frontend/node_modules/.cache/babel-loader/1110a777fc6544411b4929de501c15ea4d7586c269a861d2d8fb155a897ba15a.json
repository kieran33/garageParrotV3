{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ki\\xE9ran\\\\Desktop\\\\garage-parrot - Copie\\\\Frontend\\\\src\\\\components\\\\BoutonSupprimerServices.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ReactModal from 'react-modal';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BouttonSupprimerServices = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectService, setSelectService] = useState('');\n  const [listeName, setListeName] = useState([]);\n  useEffect(() => {\n    ReactModal.setAppElement('body');\n  }, []);\n  useEffect(() => {\n    //Récupérer les services actuels du localStorage\n    const getListeServicesUpdate = JSON.parse(localStorage.getItem('liste de services')) || [];\n    setListeName(getListeServicesUpdate);\n  }, [selectService]);\n  const supprimerService = e => {\n    e.preventDefault();\n    const updateServiceName = listeName.filter(service => service.name !== selectService);\n    localStorage.setItem('liste de services', JSON.stringify(updateServiceName));\n    setListeName(updateServiceName);\n    alert(`Le service ${selectService} à bien été supprimer`);\n  };\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"boutonSupprimerService\",\n      onClick: openModal,\n      children: \"Supprimer un service\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactModal, {\n      isOpen: isModalOpen,\n      onRequestClose: closeModal,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"supprimerService\",\n        onSubmit: supprimerService,\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Quel service souhaitez-vous supprimer ?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"servicesSuppression\",\n          id: \"servicesSuppression\",\n          value: selectService,\n          onChange: e => setSelectService(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Veuillez choisir le service \\xE0 supprimer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), listeName.map((service, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: service.name,\n            children: service.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bouttonSupprimer\",\n            type: \"submit\",\n            children: \"Supprimer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bouttonAnnulerSupr\",\n            onClick: closeModal,\n            children: \"Fermer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(BouttonSupprimerServices, \"EsFPuVz8/R9TQUrHMDGDoMKmDA4=\");\n_c = BouttonSupprimerServices;\nexport default BouttonSupprimerServices;\nvar _c;\n$RefreshReg$(_c, \"BouttonSupprimerServices\");","map":{"version":3,"names":["React","ReactModal","useState","useEffect","jsxDEV","_jsxDEV","BouttonSupprimerServices","_s","isOpen","setIsOpen","selectService","setSelectService","listeName","setListeName","setAppElement","getListeServicesUpdate","JSON","parse","localStorage","getItem","supprimerService","e","preventDefault","updateServiceName","filter","service","name","setItem","stringify","alert","openModal","setIsModalOpen","closeModal","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isModalOpen","onRequestClose","onSubmit","id","value","onChange","target","required","map","index","type","_c","$RefreshReg$"],"sources":["C:/Users/Kiéran/Desktop/garage-parrot - Copie/Frontend/src/components/BoutonSupprimerServices.js"],"sourcesContent":["import React from 'react';\r\nimport ReactModal from 'react-modal';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst BouttonSupprimerServices = () => {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [selectService, setSelectService] = useState('');\r\n    const [listeName, setListeName] = useState([]);\r\n\r\n    useEffect(() => {\r\n        ReactModal.setAppElement('body');\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        //Récupérer les services actuels du localStorage\r\n        const getListeServicesUpdate = JSON.parse(localStorage.getItem('liste de services')) || [];\r\n        setListeName(getListeServicesUpdate);\r\n    }, [selectService]);\r\n\r\n\r\n    const supprimerService = (e) => {\r\n        e.preventDefault();\r\n\r\n        const updateServiceName = listeName.filter(service => service.name !== selectService);\r\n\r\n        localStorage.setItem('liste de services', JSON.stringify(updateServiceName));\r\n\r\n        setListeName(updateServiceName);\r\n\r\n        alert(`Le service ${selectService} à bien été supprimer`);\r\n    };\r\n\r\n    const openModal = () => {\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button className=\"boutonSupprimerService\" onClick={openModal}>Supprimer un service</button>\r\n            <ReactModal\r\n                isOpen={isModalOpen}\r\n                onRequestClose={closeModal}\r\n            >\r\n                <form className=\"supprimerService\" onSubmit={supprimerService}>\r\n                    <legend>Quel service souhaitez-vous supprimer ?</legend>\r\n                    <select\r\n                        name=\"servicesSuppression\"\r\n                        id=\"servicesSuppression\"\r\n                        value={selectService}\r\n                        onChange={(e) => setSelectService(e.target.value)}\r\n                        required\r\n                    >\r\n                        <option value=\"\">Veuillez choisir le service à supprimer</option>\r\n                        {listeName.map((service, index) => (\r\n                            <option key={index} value={service.name}>\r\n                                {service.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <div>\r\n                        <button className=\"bouttonSupprimer\" type=\"submit\">Supprimer</button>\r\n                        <button className=\"bouttonAnnulerSupr\" onClick={closeModal}>Fermer</button>\r\n                    </div>\r\n                </form>\r\n\r\n            </ReactModal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BouttonSupprimerServices;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}