{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\nimport Navigation from '../components/Navigation';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport axios from 'axios';\nconst SeConnecter = () => {\n  _s();\n  /*\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [listeEmployes, setListeEmployes] = useState('');\r\n    const navigate = useNavigate();\r\n    const etatConnexion = localStorage.getItem('etat connexion');\r\n  const admin = localStorage.getItem('compte admin');\r\n    useEffect(() => {\r\n      const getEmployes = async () => {\r\n          try {\r\n              const response = await axios.get('http://localhost:3001/api/get', {\r\n                  headers: {\r\n                      'Content-Type': 'application/json',\r\n                  },\r\n              });\r\n              const employes = JSON.stringify(response.data)\r\n              setListeEmployes(Array.from(new Set(JSON.parse(employes))));\r\n              console.log('Succès:', response.data);\r\n          } catch (error) {\r\n              console.error('Erreur:', error.response ? error.response.data : error.message);\r\n          }\r\n      }\r\n      getEmployes();\r\n  }, []);\r\n    const tableauEmployes = Array.from(\r\n      new Set(listeEmployes)\r\n  );\r\n    const connexion = (e) => {\r\n      //e.preventDefault();\r\n      tableauEmployes.map(employe => {\r\n          if ((employe.email === email && employe.password === password)) {\r\n              localStorage.setItem('etat connexion', true);\r\n              console.log('Bravo vous êtes connecté', email, ' ', password);\r\n              navigate(\"/\");\r\n              location.reload();\r\n          } else if (email === \"vincent@vincent\" && password === \"parrot\") {\r\n              localStorage.setItem('etat connexion', true);\r\n              localStorage.setItem('compte admin', true);\r\n              navigate(\"/\");\r\n              location.reload();\r\n          } else {\r\n              console.log('Compte employé introuvable');\r\n          }\r\n      })\r\n  };\r\n    const deconnexion = (e) => {\r\n      e.preventDefault();\r\n      setEmail('');\r\n      setPassword('');\r\n      localStorage.removeItem('etat connexion');\r\n      if (localStorage.getItem('compte admin')) {\r\n          localStorage.removeItem('compte admin');\r\n      }\r\n      navigate(\"/\");\r\n      location.reload();\r\n  }*/\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const connexion = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:3001/login', {\n        email: email,\n        password: password\n      });\n      // Vous pouvez ajuster cette partie en fonction de la réponse de votre serveur\n      if (response.data.success) {\n        navigate(\"/\");\n      } else {\n        alert('Identifiants incorrects.');\n      }\n    } catch (error) {\n      console.error('Erreur de connexion:', error);\n      alert('Erreur lors de la tentative de connexion.');\n    }\n  };\n\n  // La fonction deconnexion n'est peut-être pas nécessaire si vous gérez les sessions sur le serveur\n\n  return {/*<div>\r\n                 <Navigation />\r\n                 <h1>Espace professionnel</h1>\r\n                 <div className=\"conteneurConnexion\">\r\n                     <form className=\"formulaireConnexion\">\r\n                         {admin === \"true\" ?\r\n                             <>\r\n                                 <legend>Vous êtes connecté en tant qu'admin</legend>\r\n                                 <button onClick={deconnexion}>\r\n                                     Se déconnecter\r\n                                 </button>\r\n                             </>\r\n                             :\r\n                             etatConnexion === \"true\" && admin !== \"true\" ?\r\n                                 <>\r\n                                     <legend>Vous êtes connecté en tant qu'employé</legend>\r\n                                     <button onClick={deconnexion}>\r\n                                         Se déconnecter\r\n                                     </button>\r\n                                 </>\r\n                                 :\r\n                                 <div>\r\n                                     <input\r\n                                         type=\"email\"\r\n                                         name=\"email\"\r\n                                         id=\"email\"\r\n                                         placeholder=\"votre email\"\r\n                                         value={email}\r\n                                         onChange={(e) => setEmail(e.target.value)}\r\n                                         required\r\n                                     />\r\n                                     <label htmlFor=\"email\"></label>\r\n                                       <input\r\n                                         type=\"password\"\r\n                                         name=\"password\"\r\n                                         id=\"password\"\r\n                                         placeholder=\"votre mot de passe\"\r\n                                         value={password}\r\n                                         onChange={(e) => setPassword(e.target.value)}\r\n                                         required\r\n                                     />\r\n                                     <label htmlFor=\"password\"></label>\r\n                                       <div className=\"boutonConnexion\">\r\n                                         <button onClick={connexion}>\r\n                                             Se connecter\r\n                                         </button>\r\n                                     </div>\r\n                                 </div>\r\n                         }\r\n                     </form>\r\n                 </div>\r\n                 <Footer />\r\n                     </div >*/};\n};\n_s(SeConnecter, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = SeConnecter;\nexport default SeConnecter;\nvar _c;\n$RefreshReg$(_c, \"SeConnecter\");","map":{"version":3,"names":["React","Navigation","useState","useEffect","useNavigate","Footer","axios","SeConnecter","_s","email","setEmail","password","setPassword","navigate","connexion","e","preventDefault","response","post","data","success","alert","error","console","_c","$RefreshReg$"],"sources":["C:/Users/Kiéran/Desktop/garage-parrot -version-2/Frontend/src/pages/SeConnecter.js"],"sourcesContent":["import React from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Footer from '../components/Footer';\r\nimport axios from 'axios';\r\n\r\nconst SeConnecter = () => {\r\n\r\n    /*\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [listeEmployes, setListeEmployes] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const etatConnexion = localStorage.getItem('etat connexion');\r\n    const admin = localStorage.getItem('compte admin');\r\n\r\n    useEffect(() => {\r\n        const getEmployes = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:3001/api/get', {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                });\r\n                const employes = JSON.stringify(response.data)\r\n                setListeEmployes(Array.from(new Set(JSON.parse(employes))));\r\n                console.log('Succès:', response.data);\r\n            } catch (error) {\r\n                console.error('Erreur:', error.response ? error.response.data : error.message);\r\n            }\r\n        }\r\n        getEmployes();\r\n    }, []);\r\n\r\n    const tableauEmployes = Array.from(\r\n        new Set(listeEmployes)\r\n    );\r\n\r\n    const connexion = (e) => {\r\n        //e.preventDefault();\r\n        tableauEmployes.map(employe => {\r\n            if ((employe.email === email && employe.password === password)) {\r\n                localStorage.setItem('etat connexion', true);\r\n                console.log('Bravo vous êtes connecté', email, ' ', password);\r\n                navigate(\"/\");\r\n                location.reload();\r\n            } else if (email === \"vincent@vincent\" && password === \"parrot\") {\r\n                localStorage.setItem('etat connexion', true);\r\n                localStorage.setItem('compte admin', true);\r\n                navigate(\"/\");\r\n                location.reload();\r\n            } else {\r\n                console.log('Compte employé introuvable');\r\n            }\r\n        })\r\n    };\r\n\r\n    const deconnexion = (e) => {\r\n        e.preventDefault();\r\n        setEmail('');\r\n        setPassword('');\r\n        localStorage.removeItem('etat connexion');\r\n        if (localStorage.getItem('compte admin')) {\r\n            localStorage.removeItem('compte admin');\r\n        }\r\n        navigate(\"/\");\r\n        location.reload();\r\n    }*/\r\n\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const connexion = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('http://localhost:3001/login', {\r\n                email: email,\r\n                password: password\r\n            });\r\n            // Vous pouvez ajuster cette partie en fonction de la réponse de votre serveur\r\n            if (response.data.success) {\r\n                navigate(\"/\");\r\n            } else {\r\n                alert('Identifiants incorrects.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Erreur de connexion:', error);\r\n            alert('Erreur lors de la tentative de connexion.');\r\n        }\r\n    };\r\n\r\n    // La fonction deconnexion n'est peut-être pas nécessaire si vous gérez les sessions sur le serveur\r\n\r\n    return (\r\n        {/*<div>\r\n                <Navigation />\r\n                <h1>Espace professionnel</h1>\r\n                <div className=\"conteneurConnexion\">\r\n                    <form className=\"formulaireConnexion\">\r\n                        {admin === \"true\" ?\r\n                            <>\r\n                                <legend>Vous êtes connecté en tant qu'admin</legend>\r\n                                <button onClick={deconnexion}>\r\n                                    Se déconnecter\r\n                                </button>\r\n                            </>\r\n                            :\r\n                            etatConnexion === \"true\" && admin !== \"true\" ?\r\n                                <>\r\n                                    <legend>Vous êtes connecté en tant qu'employé</legend>\r\n                                    <button onClick={deconnexion}>\r\n                                        Se déconnecter\r\n                                    </button>\r\n                                </>\r\n                                :\r\n                                <div>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        id=\"email\"\r\n                                        placeholder=\"votre email\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                    <label htmlFor=\"email\"></label>\r\n\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        id=\"password\"\r\n                                        placeholder=\"votre mot de passe\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                        required\r\n                                    />\r\n                                    <label htmlFor=\"password\"></label>\r\n\r\n                                    <div className=\"boutonConnexion\">\r\n                                        <button onClick={connexion}>\r\n                                            Se connecter\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                        }\r\n                    </form>\r\n                </div>\r\n                <Footer />\r\n                    </div >*/}\r\n    );\r\n};\r\n\r\nexport default SeConnecter;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EASI,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,SAAS,GAAG,MAAOC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,6BAA6B,EAAE;QAC7DT,KAAK,EAAEA,KAAK;QACZE,QAAQ,EAAEA;MACd,CAAC,CAAC;MACF;MACA,IAAIM,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;QACvBP,QAAQ,CAAC,GAAG,CAAC;MACjB,CAAC,MAAM;QACHQ,KAAK,CAAC,0BAA0B,CAAC;MACrC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CD,KAAK,CAAC,2CAA2C,CAAC;IACtD;EACJ,CAAC;;EAED;;EAEA,OACI,CAAC;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BApDS,CAsDqB;AAE9B,CAAC;AAACb,EAAA,CApJID,WAAW;EAAA,QAoEIH,WAAW;AAAA;AAAAoB,EAAA,GApE1BjB,WAAW;AAsJjB,eAAeA,WAAW;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}